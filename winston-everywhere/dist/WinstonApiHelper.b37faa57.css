.winstonBlurMask{z-index:99999999;-webkit-backdrop-filter:blur(20px)saturate(180%);backdrop-filter:blur(20px)saturate(180%);opacity:0;will-change:opacity;background:#fff0;width:100%;height:100vh;margin:0;padding:0;transition:opacity .5s ease-out;position:fixed;inset:0}.winstonBlurMask .winHelper{filter:blur(225px);width:100%;height:100%;position:relative}.winstonBlurMask .winHelper .winsonStain{will-change:transform,background-color;background-color:#0000;transition-property:opacity,background-color,transform;transition-timing-function:ease;position:absolute;overflow:visible;transform:scale(1)}.wrapperWinston{z-index:2147483647;color:#fff;box-sizing:border-box;text-align:center;touch-action:manipulation;-webkit-user-select:none;user-select:none;-webkit-user-drag:none;background:#000;flex-direction:column;justify-content:flex-start;align-items:center;gap:0;width:calc(100% - 64px);margin:0 auto;font-size:48px;display:flex;position:fixed;left:0;right:0;font-family:SF Pro,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif!important}.wrapperWinston *{box-sizing:border-box;outline:none!important;font-family:SF Pro,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif!important}.wrapperWinston p{margin:0}.wrapperWinston img{width:178px}.wrapperWinston h1{margin:0;font-size:84px;font-weight:700}.wrapperWinston .winstonContent{flex-direction:column;justify-content:flex-end;align-items:center;gap:0;padding:56px;display:flex;overflow:hidden}.wrapperWinston .arrowWinston{z-index:-1;background-color:#000;border-radius:12px;width:100px;height:100px;transition:all 1s cubic-bezier(.12,1.335,.4,.98);position:absolute;left:84px}.wrapperWinston .buttonsHolder{gap:24px;width:100%;margin-top:46px;display:flex}.wrapperWinston .fullWidthWinstonBtn{color:#fff;-webkit-tap-highlight-color:#fff0;background:#3b3b3f;border:none;border-radius:1000px;flex-grow:1;justify-content:center;align-items:center;gap:12px;padding:28px 56px;font-family:SF Pro,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif;font-size:48px;font-weight:500;display:flex}.wrapperWinston .fullWidthWinstonBtn:active{filter:brightness(.5)}.wrapperWinston .fullWidthWinstonBtn:focus{outline:none}.wrapperWinston .fullWidthWinstonBtn.primary{background:#008eff}.existentCredentialsWrapper{flex-direction:column;justify-content:flex-start;align-items:stretch;gap:16px;width:100%;margin-top:32px;display:flex}.existentCredentialsWrapper .existentCredential{color:#fff;border:none;border-radius:40px;flex-direction:row;justify-content:flex-start;align-items:center;gap:24px;width:100%;padding:32px 0;display:flex}.existentCredentialsWrapper .existentCredential.bordered{background-color:#31d15840;justify-content:center;padding:32px 24px}.existentCredentialsWrapper .existentCredential.bordered .body{flex:0}.existentCredentialsWrapper .existentCredential.bordered>svg{color:#31d158}.existentCredentialsWrapper .existentCredential>svg{color:#008eff;font-size:88px}.existentCredentialsWrapper .existentCredential .body{text-align:left;flex:1;gap:12px}.existentCredentialsWrapper .existentCredential .body .name{margin-right:16px;font-size:48px;font-weight:600}.existentCredentialsWrapper .existentCredential .body .appID{opacity:.5;font-size:32px;font-weight:400}.existentCredentialsWrapper .existentCredential .body .appSecret{display:none}.existentCredentialsWrapper .existentCredential .btnsWrapper{flex-direction:row;flex-shrink:0;gap:16px;display:flex}.existentCredentialsWrapper .existentCredential .btnsWrapper .deleteWrapper{flex-direction:row;justify-content:flex-end;align-items:center;width:100px;display:flex}.existentCredentialsWrapper .existentCredential .btnsWrapper button{color:#0b84ff;-webkit-tap-highlight-color:#fff0;background:#0a85ff40;border:none;border-radius:100px;flex-direction:row;flex-shrink:0;justify-content:center;align-items:center;gap:4px;padding:28px 48px;font-size:44px;font-weight:600;line-height:100%;display:flex;overflow:hidden}.existentCredentialsWrapper .existentCredential .btnsWrapper button span{height:44px}.existentCredentialsWrapper .existentCredential .btnsWrapper button:active{filter:brightness(.5)}.existentCredentialsWrapper .existentCredential .btnsWrapper button:focus{outline:none}.existentCredentialsWrapper .existentCredential .btnsWrapper button .disabled{opacity:.5;filter:grayscale();pointer-events:none}.existentCredentialsWrapper .existentCredential .btnsWrapper button.delete{color:#ff453a;background:#ff453a40;border-radius:0;padding:28px}.existentCredentialsWrapper .existentCredential .btnsWrapper button img{width:48px;height:48px}.closeButton{color:#ffffff80;background:0 0;border:none;outline:none;font-size:72px;position:absolute;top:64px;right:64px}.closeButton:active{color:#fff3}.spinner{width:1em;height:1em;font-size:75px;display:inline-block;position:absolute;top:64px;left:64px}.spinnerBlade{transform-origin:50% -.2222em;background-color:#0000;border-radius:.0571429em;width:.114286em;height:.314286em;animation:.66s linear infinite spinner-fade;position:absolute;bottom:0;left:.4629em}.spinnerBlade:first-child{animation-delay:0s;transform:rotate(0)}.spinnerBlade:nth-child(2){animation-delay:83ms;transform:rotate(45deg)}.spinnerBlade:nth-child(3){animation-delay:.166s;transform:rotate(90deg)}.spinnerBlade:nth-child(4){animation-delay:.249s;transform:rotate(135deg)}.spinnerBlade:nth-child(5){animation-delay:.332s;transform:rotate(180deg)}.spinnerBlade:nth-child(6){animation-delay:.415s;transform:rotate(225deg)}.spinnerBlade:nth-child(7){animation-delay:.498s;transform:rotate(270deg)}.spinnerBlade:nth-child(8){animation-delay:.581s;transform:rotate(315deg)}@keyframes spinner-fade{0%{background-color:#69717d}to{background-color:#0000}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
